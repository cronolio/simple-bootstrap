#!/bin/bash

# based on
# http://www.linuxfromscratch.org/lfs/view/8.1-systemd/

run_default(){

export LFS=/mnt/lfs
export runpath=$(pwd)
export LC_ALL=POSIX

echo LFS is $LFS

mkdir -pv $LFS
mount -v -t jfs /dev/vdb3 $LFS
mkdir -pv $LFS/boot
mount -v -t jfs /dev/vdb1 $LFS/boot

mkdir -v $LFS/sources
chmod -v a+wt $LFS/sources

#echo -n "downloading source... "
if [[ ! -f $LFS/sources/fich ]]; then
	rm -rf $LFS/sources/*

	cp -v $runpath/wget-list $LFS/sources
	cp -v $runpath/md5sums $LFS/sources
	cp -v $runpath/no-gentoo.patch $LFS/sources

	if [[ ! -f $LFS/sources/wget-list || ! -f $LFS/sources/md5sums ]]; then
		echo "no wget or md5sum file"
		exit 1
	fi

	wget --input-file=$LFS/sources/wget-list --continue --directory-prefix=$LFS/sources

	pushd $LFS/sources > /dev/null 2>&1 || exit 1
	md5sum -c md5sums > fich
	popd > /dev/null 2>&1 || exit 1
	[[ -f $LFS/sources/fich_failed ]] && rm $LFS/sources/fich_failed
	grep FAILED $LFS/sources/fich && echo "fail" && mv $LFS/sources/fich $LFS/sources/fich_failed && exit 1

	echo "done"

else
	echo "hope source downloaded and OK"

fi

mkdir -v $LFS/tools
ln -sv $LFS/tools /

GROUP_AVAILABLE=$(getent group lfs)
if [ -z "$GROUP_AVAILABLE" ]; then
	echo "adding lfs group"
	groupadd lfs
fi

USER_AVAILABLE=$(getent passwd lfs)
if [ -z "$USER_AVAILABLE" ]; then
	echo "adding lfs user"
	useradd -s /bin/bash -g lfs -m -k /dev/null lfs
fi

chown -v lfs $LFS/tools
chown -v lfs $LFS/sources

#cat /home/bootstrap > /home/lfs/bootstrap

#chown -v lfs /home/lfs/bootstrap
#chmod -v u+x /home/lfs/bootstrap

echo 'set +h
umask 022
PS1="\u:\w\$ "
LFS=/mnt/lfs
source_dir=$LFS/sources
LC_ALL=POSIX
LFS_TGT=x86_64-lfs-linux-gnu
CFLAGS="-march=core2 -O2 -pipe"
CXXFLAGS="-march=core2 -O2 -pipe"
LDFLAGS="-Wl,-O1 -Wl,--as-needed"
MAKEFLAGS="-j 2"
PATH=/tools/bin:/bin:/usr/bin
export PS1 LFS source_dir LC_ALL LFS_TGT CFLAGS CXXFLAGS LDFLAGS MAKEFLAGS PATH
' > "$runpath"/environment

echo "bootstraping will be continue from lfs user"

}

setvar(){
PACKAGE_A=$(find * -maxdepth 1 -type f -name "*$PACKAGE*")
PACKAGE_N=$(echo "$PACKAGE_A" | sed -r 's/(\.tar|\.bz|\.gz|\.xz|\.zip)//g')
}


continue_from_user(){

su lfs $0 from-user
}

from_user(){
echo "continue from $USER user"

REQENV="REQENV HOME USER TERM LS_COLORS PS1 LFS source_dir LC_ALL LFS_TGT CFLAGS CXXFLAGS LDFLAGS MAKEFLAGS PATH runpath"

for C in $(printenv | cut -d '=' -f 1); do
#   echo $C
    echo $REQENV | grep $C > /dev/null 2>&1 || unset $C > /dev/null 2>&1
done

set -e

source "$runpath"/environment

echo "LFS is $LFS"

cd $LFS/sources

#####################
echo zzzzzzzzzz binutils 1 step
PACKAGE=binutils-2.29.tar.xz setvar

echo "arhive $PACKAGE_A"
echo "name $PACKAGE_N"

echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"

cd $PACKAGE_N
mkdir -v build
cd build

../configure --prefix=/tools/cross      \
             --with-sysroot=$LFS        \
             --with-lib-path=/tools/lib \
             --target=$LFS_TGT          \
             --disable-nls              \
             --disable-werror

make

case $(uname -m) in
  x86_64) mkdir -v /tools/lib && ln -sv lib /tools/lib64 ;;
esac

make install

cd $source_dir
echo -n "removing... "
rm -rf $PACKAGE_N && echo "done"

############################
echo zzzzzzzz gcc step 1
PACKAGE=gcc setvar
echo "arhive $PACKAGE_A"
echo "name $PACKAGE_N"

echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"

cd $PACKAGE_N

tar -xf ../mpfr-3.1.5.tar.xz
mv -v mpfr-3.1.5 mpfr
tar -xf ../gmp-6.1.2.tar.xz
mv -v gmp-6.1.2 gmp
tar -xf ../mpc-1.0.3.tar.gz
mv -v mpc-1.0.3 mpc

for file in gcc/config/{linux,i386/linux{,64}}.h
do
  cp -uv $file{,.orig}
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
      -e 's@/usr@/tools@g' $file.orig > $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done

case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
 ;;
esac

mkdir -v build
cd       build

../configure                                       \
    --target=$LFS_TGT                              \
    --prefix=/tools/cross                          \
    --with-glibc-version=2.11                      \
    --with-sysroot=$LFS                            \
    --with-newlib                                  \
    --without-headers                              \
    --with-local-prefix=/tools                     \
    --with-native-system-header-dir=/tools/include \
    --disable-nls                                  \
    --disable-shared                               \
    --disable-multilib                             \
    --disable-decimal-float                        \
    --disable-threads                              \
    --disable-libatomic                            \
    --disable-libgomp                              \
    --disable-libmpx                               \
    --disable-libquadmath                          \
    --disable-libssp                               \
    --disable-libvtv                               \
    --disable-libstdcxx                            \
    --enable-languages=c,c++

make
make install

cd $source_dir

rm -rf $PACKAGE_N

##########################################
### linux api
PACKAGE=linux-4.12.7 setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"

cd $PACKAGE_N

make mrproper
make INSTALL_HDR_PATH=dest headers_install
mkdir -v /tools/include
cp -rv dest/include/* /tools/include

cd $source_dir
rm -rf $PACKAGE_N

#########################################
### glibc
PACKAGE=glibc-2.26.tar.xz setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"
cd $PACKAGE_N

patch -Np1 -i ../glibc-2.26-fhs-1.patch

mkdir -v build
cd       build

../configure                             \
      --prefix=/tools                    \
      --host=$LFS_TGT                    \
      --build=$(../scripts/config.guess) \
      --enable-kernel=3.2                \
      --with-headers=/tools/include      \
      libc_cv_forced_unwind=yes          \
      libc_cv_c_cleanup=yes

make -j1
make install

cd $source_dir
rm -rf $PACKAGE_N

###############################
echo libstdc++ part of gcc
PACKAGE=gcc setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"
cd $PACKAGE_N

mkdir -v build
cd       build

PATH=/tools/cross/bin:${PATH}       \
../libstdc++-v3/configure           \
    --host=$LFS_TGT                 \
    --prefix=/tools                 \
    --disable-multilib              \
    --disable-nls                   \
    --disable-libstdcxx-threads     \
    --disable-libstdcxx-pch         \
    --with-gxx-include-dir=/tools/cross/$LFS_TGT/include/c++/7.2.0

PATH=/tools/cross/bin:${PATH} make
PATH=/tools/cross/bin:${PATH} make install

cd $source_dir
rm -rf $PACKAGE_N

###############################
echo binutils step 2
PACKAGE=binutils-2.29.tar.xz setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"
cd $PACKAGE_N

mkdir -v build
cd       build

PATH=/tools/cross/bin:${PATH}  \
CC=$LFS_TGT-gcc                \
AR=$LFS_TGT-ar                 \
RANLIB=$LFS_TGT-ranlib         \
../configure                   \
    --prefix=/tools            \
    --disable-nls              \
    --disable-werror           \
    --with-lib-path=/tools/lib \
    --with-sysroot

unset CC AR RANLIB

PATH=/tools/cross/bin:${PATH} make
PATH=/tools/cross/bin:${PATH} make install

PATH=/tools/cross/bin:${PATH} make -C ld clean
PATH=/tools/cross/bin:${PATH} make -C ld LIB_PATH=/lib:/usr/lib
cp -v ld/ld-new /tools/bin

cd $source_dir
rm -rf $PACKAGE_N
############################
echo zzzzzzzz gcc step 2
PACKAGE=gcc setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"
cd $PACKAGE_N

cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
  `dirname $(PATH=/tools/cross/bin:${PATH} $LFS_TGT-gcc -print-libgcc-file-name)`/include-fixed/limits.h

for file in gcc/config/{linux,i386/linux{,64}}.h
do
  cp -uv $file{,.orig}
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
      -e 's@/usr@/tools@g' $file.orig > $file
  echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done

case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
  ;;
esac

tar -xf ../mpfr-3.1.5.tar.xz
mv -v mpfr-3.1.5 mpfr
tar -xf ../gmp-6.1.2.tar.xz
mv -v gmp-6.1.2 gmp
tar -xf ../mpc-1.0.3.tar.gz
mv -v mpc-1.0.3 mpc

mkdir -v build
cd       build

PATH=/tools/cross/bin:${PATH}                      \
CC=$LFS_TGT-gcc                                    \
CXX=$LFS_TGT-g++                                   \
AR=$LFS_TGT-ar                                     \
RANLIB=$LFS_TGT-ranlib                             \
../configure                                       \
    --prefix=/tools                                \
    --with-local-prefix=/tools                     \
    --with-native-system-header-dir=/tools/include \
    --enable-languages=c,c++                       \
    --disable-libstdcxx-pch                        \
    --disable-multilib                             \
    --disable-bootstrap                            \
    --disable-libgomp

unset CC CXX AR RANLIB

PATH=/tools/cross/bin:${PATH} make
PATH=/tools/cross/bin:${PATH} make install

ln -sv gcc /tools/bin/cc

cd $source_dir
rm -rf $PACKAGE_N && echo "removing done"
pwd

############################
############################
echo zzzzzzzz check compiler and linker from cross

echo 'int main(){}' > dummy.c
cc dummy.c
readelf -l a.out | grep ': /tools'

rm -v dummy.c a.out

############################
echo libstdc++ part of gcc with native compiler
PACKAGE=gcc setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"
cd $PACKAGE_N

mkdir -v build
cd	 build

../libstdc++-v3/configure           \
    --prefix=/tools                 \
    --includedir=/tools/include     \
    --disable-multilib              \
    --disable-nls                   \
    --disable-libstdcxx-threads     \
    --disable-libstdcxx-pch

make
make install

cd $source_dir
rm -rf $PACKAGE_N


############################

export CFLAGS="${CFLAGS} -nostdinc -I/tools/lib/gcc/x86_64-pc-linux-gnu/7.2.0/include -I/tools/lib/gcc/x86_64-pc-linux-gnu/7.2.0/include-fixed -I/tools/include"

############################
echo zzzzzzzz pkg-config
PACKAGE=pkg-config-0.29.2.tar.gz setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"
cd $PACKAGE_N

./configure --prefix=/tools	\
	--enable-shared		\
	--with-internal-glib	\
	--disable-static	\
	--disable-host-tool

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################

echo zzzzzzzz ncurses
PACKAGE=ncurses-6.0.tar.gz setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"
cd $PACKAGE_N

sed -i s/mawk// configure
sed -i '/LIBTOOL_INSTALL/d' c++/Makefile.in

./configure --prefix=/tools	\
	--enable-colorfgbg	\
	--enable-ext-mouse	\
	--with-cxx-shared	\
	--with-shared		\
	--without-debug		\
	--without-tests		\
	--without-ada		\
	--without-normal	\
	--enable-widec		\
	--enable-ext-colors	\
	--enable-overwrite	\
	--enable-sigwinch	\
	--enable-pc-files	\
	--with-pkg-config=/tools/bin/pkg-config \
	--with-pkg-config-libdir=/tools/lib/pkgconfig	\
	--enable-pthreads-eintr

make
make install

for lib in ncurses form panel menu ; do
    rm -vf                    /tools/lib/lib${lib}.so
    echo "INPUT(-l${lib}w)" > /tools/lib/lib${lib}.so
    ln -sfv ${lib}w.pc        /tools/lib/pkgconfig/${lib}.pc
done

rm -vf                     /tools/lib/libcursesw.so
echo "INPUT(-lncursesw)" > /tools/lib/libcursesw.so
ln -sfv libncurses.so      /tools/lib/libcurses.so

cd $source_dir
rm -rf $PACKAGE_N

############################
echo zzzzzzzzzz readline-7.0.tar.gz
PACKAGE=readline-7.0.tar.gz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

sed -i '/MV.*old/d' Makefile.in
sed -i '/{OLDSUFF}/c:' support/shlib-install

./configure --prefix=/tools  \
            --disable-static

make SHLIB_LIBS="-L/tools/lib -lncursesw"

make SHLIB_LIBS="-L/tools/lib -lncurses" install

cd $source_dir
rm -rf $PACKAGE_N

############################
echo zzzzzzzz bash
PACKAGE=bash-4.4.18.tar.gz setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"
cd $PACKAGE_N

patch -Np0 -i ../bash44-019

./configure --prefix=/tools	\
	--without-bash-malloc	\
	--with-installed-readline

make
make install
ln -sv bash /tools/bin/sh

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz bison
PACKAGE=bison-3.0.4.tar.xz setvar
echo -n "extracting... "
tar -xf $PACKAGE_A
echo "done"
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz coreutils
PACKAGE=coreutils-8.27.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

patch -Np1 -i ../coreutils-8.27-i18n-1.patch
./configure --prefix=/tools --enable-install-program=hostname

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz diffutils
PACKAGE=diffutils-3.6.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz file
PACKAGE=file-5.31.tar.gz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz findutils
PACKAGE=findutils-4.6.0.tar.gz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz gawk
PACKAGE=gawk-4.1.4.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz gettext
PACKAGE=gettext-0.19.8.1.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

cd gettext-tools
EMACS="no" ./configure --prefix=/tools --disable-shared

make -C gnulib-lib
make -C intl pluralx.c
make -C src msgfmt
make -C src msgmerge
make -C src xgettext

cp -v src/{msgfmt,msgmerge,xgettext} /tools/bin

cd /tools/bin
ln -s msgfmt gmsgfmt

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz grep
PACKAGE=grep-3.1.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz gzip
PACKAGE=gzip-1.8.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz m4
PACKAGE=m4-1.4.18.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz make
PACKAGE=make-4.2.1.tar.gz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools --without-guile

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz patch
PACKAGE=patch-2.7.5.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz perl
PACKAGE=perl-5.26.0.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

sed -e '9751 a#ifndef PERL_IN_XSUB_RE' \
    -e '9808 a#endif'                  \
    -i regexec.c

sh Configure -des -Dprefix=/tools -Dlibs=-lm

make

cp -v perl cpan/podlators/scripts/pod2man /tools/bin
mkdir -pv /tools/lib/perl5/5.26.0
cp -Rv lib/* /tools/lib/perl5/5.26.0

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz sed
PACKAGE=sed-4.4.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz tar
PACKAGE=tar-1.29.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz texinfo
PACKAGE=texinfo-6.4.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools --disable-perl-xs

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz util-linux
PACKAGE=util-linux-2.30.1.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools                \
            --without-python               \
            --disable-makeinstall-chown    \
            --without-systemdsystemunitdir \
            --without-ncurses              \
            PKG_CONFIG=""

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo zzzzzzzz xz
PACKAGE=xz-5.2.3 setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N

############################
############################
echo adition tools
############################
echo zzzzzzzzz pcre-8.41
PACKAGE=pcre-8.41 setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools		\
	--enable-unicode-properties	\
	--enable-pcre16			\
	--enable-pcre32			\
	--enable-pcretest-libreadline

make
make install

cd $source_dir
rm -rf $PACKAGE_N
############################
echo zzzzzzzzz zlib-1.2.11.tar.xz
PACKAGE=zlib-1.2.11.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools
make
make install

cd $source_dir
rm -rf $PACKAGE_N
############################
echo zzzzzzzzzzz nano
PACKAGE=nano-2.8.7.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools	\
	--sysconfdir=/tools/etc	\
	--disable-extra		\
	--enable-color		\
	--enable-utf8		\

make
make install

install -v -m644 doc/sample.nanorc /tools/etc/nanorc
sed -i 's/# set tabsize 8/set tabsize 4/g' /tools/etc/nanorc
sed -i 's/# include "\/tools\/share\/nano\/\*\.nanorc"/include "\/tools\/share\/nano\/\*\.nanorc"/g' /tools/etc/nanorc

cd $source_dir
rm -rf $PACKAGE_N
############################
echo zzzzzzzzzz bc
PACKAGE=bc-1.07.1.tar.gz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

cat > bc/fix-libmath_h << "EOF"
#! /bin/bash
sed -e '1   s/^/{"/' \
    -e     's/$/",/' \
    -e '2,$ s/^/"/'  \
    -e   '$ d'       \
    -i libmath.h

sed -e '$ s/$/0}/' \
    -i libmath.h
EOF

sed -i -e '/flex/s/as_fn_error/: ;; # &/' configure

./configure --prefix=/tools \
	--with-readline

make
make install

cd $source_dir
rm -rf $PACKAGE_N
###########################
echo zzzzzzz openssl
PACKAGE=openssl-1.1.0f.tar.gz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./config --prefix=/tools		\
	--openssldir=/tools/etc/ssl 	\
	--libdir=lib			\
	shared				\
	zlib-dynamic

make
sed -i 's# libcrypto.a##;s# libssl.a##;/INSTALL_LIBS/s#libcrypto.a##' Makefile
make MANSUFFIX=ssl install

cd $source_dir
rm -rf $PACKAGE_N
###########################
echo zzzzzzzz ca-certs

if [ -f make-ca.sh-20170514 ]; then
	rm make-ca.sh-20170514 #sed can be once
fi
if [ ! -f certdata.txt ]; then
	wget https://hg.mozilla.org/releases/mozilla-release/raw-file/default/security/nss/lib/ckfw/builtins/certdata.txt
fi

wget http://anduin.linuxfromscratch.org/BLFS/other/make-ca.sh-20170514

sed -i 's/\/etc/\/tools\/etc/g' make-ca.sh-20170514
chmod u+x make-ca.sh-20170514

./make-ca.sh-20170514

rm make-ca.sh-20170514 #sed can be once

###########################
echo zzzzzzzzzzz wget
PACKAGE=wget-1.19.4.tar.gz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools	\
	--sysconfdir=/tools/etc \
	--disable-debug		\
	--with-openssl		\
	--with-ssl=openssl	\
	--disable-ipv6

make
make install

cd $source_dir
rm -rf $PACKAGE_N
############################
echo zzzzzzzzzzz shadow
PACKAGE=shadow-4.5.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

sed -i 's/groups$(EXEEXT) //' src/Makefile.in
find man -name Makefile.in -exec sed -i 's/groups\.1 / /'   {} \;
find man -name Makefile.in -exec sed -i 's/getspnam\.3 / /' {} \;
find man -name Makefile.in -exec sed -i 's/passwd\.5 / /'   {} \;

sed -i -e 's@#ENCRYPT_METHOD DES@ENCRYPT_METHOD SHA512@' \
       -e 's@/var/spool/mail@/var/mail@' etc/login.defs

sed -i 's/1000/999/' etc/useradd

./configure --prefix=/tools --sysconfdir=/tools/etc --with-group-name-max-length=32
make
make install

cd $source_dir
rm -rf $PACKAGE_N
############################
echo zzzzzzzzzzz autoconf-archive-2017.09.28
PACKAGE=autoconf-archive-2017.09.28.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N
############################
echo zzzzzzzzzzz libtool-2.4.6
PACKAGE=libtool-2.4.6.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools \
	--disable-static

make
make install

cd $source_dir
rm -rf $PACKAGE_N
############################
echo zzzzzzzzzzz autoconf-2.69
PACKAGE=autoconf-2.69.tar.xz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

./configure --prefix=/tools

make
make install

cd $source_dir
rm -rf $PACKAGE_N
############################
echo zzzzzzzzzzz sandbox-2.13
PACKAGE=sandbox-2.13.tar.gz setvar
tar -xf $PACKAGE_A
cd $PACKAGE_N

patch -p0 <../no-gentoo.patch
./autogen.sh
./configure --prefix=/tools \
            --disable-static

make
make install

cd $source_dir
rm -rf $PACKAGE_N
######################################################################################
###### stripping # stripping can fail with wrong files, we will disable 'set -e'
set +e
echo stripping
rm -rf /tools/cross
strip --strip-debug /tools/lib/*
/usr/bin/strip --strip-unneeded /tools/{,s}bin/*

rm -rf /tools/{,share}/{info,man,doc}

}


from_root(){

echo "now from root"

export LFS=/mnt/lfs
runpath=$(pwd)

echo $LFS
chown -R root:root $LFS/tools

mkdir -pv $LFS/{dev,proc,sys,run}

mknod -m 600 $LFS/dev/console c 5 1
mknod -m 666 $LFS/dev/null c 1 3

mount -v --bind /dev $LFS/dev

mount -vt devpts devpts $LFS/dev/pts -o gid=5,mode=620
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys
mount -vt tmpfs tmpfs $LFS/run

if [ -h $LFS/dev/shm ]; then
  mkdir -pv $LFS/$(readlink $LFS/dev/shm)
fi

}

continue_from_chroot(){
export LFS=/mnt/lfs
export runpath=$(pwd)
export LC_ALL=POSIX
me=$(basename "$0")
echo $me

cat "$runpath/$me" > $LFS/sources/$me
chmod -v u+x $LFS/sources/$me
sed -i 's/#!\/bin\/bash/#!\/tools\/bin\/bash/g' $LFS/sources/$me

/tools/bin/env -i	\
HOME=/root		\
TERM="$TERM"		\
PS1='\u:\w\$ '		\
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin \
chroot "$LFS" sources/$me from-chroot
}

from_chroot(){
echo 'set +h
PS1="\u:\w\$ "
LC_ALL=POSIX
CFLAGS="-march=core2 -O2 -pipe"
CXXFLAGS="-march=core2 -O2 -pipe"
LDFLAGS="-Wl,-O1 -Wl,--as-needed"
CHOST="x86_64-pc-linux-gnu"
MAKEFLAGS="-j 2"
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin:/tools/sbin
export PS1 LC_ALL CFLAGS CXXFLAGS LDFLAGS CHOST MAKEFLAGS PATH
' > /sources/environment

source /sources/environment

mkdir -pv /{bin,boot,etc/{sysconfig},home,lib/firmware,mnt}
mkdir -pv /{media/{floppy,cdrom},sbin,srv,var}
install -dv -m 0750 /root
install -dv -m 1777 /tmp /var/tmp

#######
cd /
ln -s ./ /usr

mkdir -pv /usr/{bin,include,lib,sbin,src}
mkdir -pv /usr/share/{color,dict,doc,info,locale,man}
mkdir -v  /usr/share/{misc,terminfo,zoneinfo}
mkdir -v  /usr/libexec
mkdir -pv /usr/share/man/man{1..8}

case $(uname -m) in
 x86_64) mkdir -v /lib64 ;;
esac

mkdir -v /var/{log,mail,spool}
ln -sv /run /var/run
ln -sv /run/lock /var/lock
mkdir -pv /var/{cache,lib/{color,misc,locate}}

ln -sv /tools/bin/{bash,cat,dd,echo,ln,pwd,rm,stty} /bin
ln -sv /tools/bin/{install,perl} /usr/bin
ln -sv /tools/lib/libgcc_s.so{,.1} /usr/lib
ln -sv /tools/lib/libstdc++.{a,so{,.6}} /usr/lib
sed 's/tools/usr/' /tools/lib/libstdc++.la > /usr/lib/libstdc++.la
for lib in blkid lzma mount uuid
do
    ln -sv /tools/lib/lib$lib.{a,so*} /usr/lib
    sed 's/tools/usr/' /tools/lib/lib${lib}.la > /usr/lib/lib${lib}.la
done

ln -sv bash /bin/sh

ln -sv /proc/self/mounts /etc/mtab

cat > /etc/passwd << "EOF"
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/dev/null:/bin/false
daemon:x:6:6:daemon:/dev/null:/bin/false
nobody:x:65534:65534:Unprivileged User:/dev/null:/bin/false
EOF

cat > /etc/group << "EOF"
root:x:0:
bin:x:1:daemon
sys:x:2:
kmem:x:3:
tape:x:4:
tty:x:5:
daemon:x:6:
utmp:x:13:
users:x:100:
nogroup:x:65534:
EOF

touch /var/log/{btmp,lastlog,faillog,wtmp}
chgrp -v utmp /var/log/lastlog
chmod -v 664  /var/log/lastlog
chmod -v 600  /var/log/btmp

pwconv
grpconv

echo "nameserver 8.8.8.8" > /etc/resolv.conf

###
# install simple
###
}




#### body ####
if [ $# -eq 0 ] ; then
	run_default && continue_from_user && from_root && continue_from_chroot
fi

while [ $# -gt 0 ]; do
case $1 in
         -c)  continue_from_user    ;;
         -r)  from_root             ;;
	 -i)  continue_from_chroot  ;;
  from-user)  from_user             ;;
from-chroot)  from_chroot           ;;
esac
shift
done
